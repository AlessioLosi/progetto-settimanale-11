{"ast":null,"code":"var _jsxFileName = \"/Users/alessiaolosi/Desktop/progetti settimanali/progetto-settimanale-11/src/components/StaticCards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Row, Container } from 'react-bootstrap';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticArtistCards = () => {\n  _s();\n  const [oliviaSongs, setOliviaSongs] = useState([]);\n  const [taylorSongs, setTaylorSongs] = useState([]);\n  const [gracieSongs, setGracieSongs] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const oliviaResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Olivia+Rodrigo\");\n        const oliviaData = await oliviaResponse.json();\n        setOliviaSongs(oliviaData.data.slice(0, 4));\n        const taylorResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Taylor+Swift\");\n        const taylorData = await taylorResponse.json();\n        setTaylorSongs(taylorData.data.slice(0, 4));\n        const gracieResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Gracie+Abrams\");\n        const gracieData = await gracieResponse.json();\n        setGracieSongs(gracieData.data.slice(0, 4));\n      } catch (error) {\n        console.error(\"Errore nel recupero delle canzoni: \", error);\n      }\n    };\n    fetchSongs();\n  }, []);\n  const renderCard = song => /*#__PURE__*/_jsxDEV(Col, {\n    md: 4,\n    className: \"mb-4 d-flex\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"h-100\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: song.album.cover_medium\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        className: \"d-flex flex-column\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: song.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: song.artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, song.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-4\",\n      children: \"Olivia Rodrigo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: oliviaSongs.map(renderCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-4\",\n      children: \"Taylor Swift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: taylorSongs.map(renderCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"my-4\",\n      children: \"Gracie Abrams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: gracieSongs.map(renderCard)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(StaticArtistCards, \"PgrCoOpCfUCT06gjDW5qCNDaflc=\");\n_c = StaticArtistCards;\nexport default StaticArtistCards;\nvar _c;\n$RefreshReg$(_c, \"StaticArtistCards\");","map":{"version":3,"names":["React","useEffect","useState","Card","Col","Row","Container","jsxDEV","_jsxDEV","StaticArtistCards","_s","oliviaSongs","setOliviaSongs","taylorSongs","setTaylorSongs","gracieSongs","setGracieSongs","fetchSongs","oliviaResponse","fetch","oliviaData","json","data","slice","taylorResponse","taylorData","gracieResponse","gracieData","error","console","renderCard","song","md","className","children","Img","variant","src","album","cover_medium","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","title","Text","artist","name","id","map","_c","$RefreshReg$"],"sources":["/Users/alessiaolosi/Desktop/progetti settimanali/progetto-settimanale-11/src/components/StaticCards.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Col, Row, Container } from 'react-bootstrap';\nimport '../App.css'\n\nconst StaticArtistCards = () => {\n  const [oliviaSongs, setOliviaSongs] = useState([]);\n  const [taylorSongs, setTaylorSongs] = useState([]);\n  const [gracieSongs, setGracieSongs] = useState([]);\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const oliviaResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Olivia+Rodrigo\");\n        const oliviaData = await oliviaResponse.json();\n        setOliviaSongs(oliviaData.data.slice(0, 4));\n\n        const taylorResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Taylor+Swift\");\n        const taylorData = await taylorResponse.json();\n        setTaylorSongs(taylorData.data.slice(0, 4));\n\n        const gracieResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Gracie+Abrams\");\n        const gracieData = await gracieResponse.json();\n        setGracieSongs(gracieData.data.slice(0, 4));\n      } catch (error) {\n        console.error(\"Errore nel recupero delle canzoni: \", error);\n      }\n    };\n\n    fetchSongs();\n  }, []);\n\n  const renderCard = (song) => (\n    <Col key={song.id} md={4} className=\"mb-4 d-flex\">\n      <Card className=\"h-100\">\n        <Card.Img variant=\"top\" src={song.album.cover_medium} />\n        <Card.Body className=\"d-flex flex-column\">\n          <Card.Title>{song.title}</Card.Title>\n          <Card.Text>{song.artist.name}</Card.Text>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n\n  return (\n    <Container>\n      <h2 className=\"my-4\">Olivia Rodrigo</h2>\n      <Row>\n        {oliviaSongs.map(renderCard)}\n      </Row>\n\n      <h2 className=\"my-4\">Taylor Swift</h2>\n      <Row>\n        {taylorSongs.map(renderCard)}\n      </Row>\n\n      <h2 className=\"my-4\">Gracie Abrams</h2>\n      <Row>\n        {gracieSongs.map(renderCard)}\n      </Row>\n    </Container>\n  );\n};\n\nexport default StaticArtistCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}