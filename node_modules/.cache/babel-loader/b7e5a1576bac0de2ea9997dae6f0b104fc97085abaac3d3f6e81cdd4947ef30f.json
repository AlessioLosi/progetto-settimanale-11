{"ast":null,"code":"var _jsxFileName = \"/Users/alessiaolosi/Desktop/progetti settimanali/progetto-settimanale-11/src/components/StaticCards.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaticArtistCards = () => {\n  _s();\n  const [oliviaSongs, setOliviaSongs] = useState([]);\n  const [taylorSongs, setTaylorSongs] = useState([]);\n  const [gracieSongs, setGracieSongs] = useState([]);\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const oliviaResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Olivia+Rodrigo\");\n        const taylorResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Taylor+Swift\");\n        const gracieResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Gracie+Abrams\");\n        if (oliviaResponse.ok && taylorResponse.ok && gracieResponse.ok) {\n          const oliviaData = await oliviaResponse.json();\n          const taylorData = await taylorResponse.json();\n          const gracieData = await gracieResponse.json();\n          setOliviaSongs(oliviaData.data.slice(0, 5));\n          setTaylorSongs(taylorData.data.slice(0, 5));\n          setGracieSongs(gracieData.data.slice(0, 5));\n        } else {\n          console.error(\"Errore nel recupero delle canzoni.\");\n        }\n      } catch (error) {\n        console.error(\"Errore nella fetch\", error);\n      }\n    };\n    fetchSongs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"static-artist-cards\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Olivia Rodrigo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: oliviaSongs.map(song => /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            className: \"heightcards\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: song.album.cover_medium\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: song.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: song.artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this)\n          }, song.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Taylor Swift\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: taylorSongs.map(song => /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            className: \"heightcards\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: song.album.cover_medium\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: song.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: song.artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, song.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Gracie Abrams\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: gracieSongs.map(song => /*#__PURE__*/_jsxDEV(Col, {\n            sm: 2,\n            className: \"heightcards\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: song.album.cover_medium\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: song.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: song.artist.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, song.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(StaticArtistCards, \"PgrCoOpCfUCT06gjDW5qCNDaflc=\");\n_c = StaticArtistCards;\nexport default StaticArtistCards;\nvar _c;\n$RefreshReg$(_c, \"StaticArtistCards\");","map":{"version":3,"names":["React","useEffect","useState","Card","Col","Row","jsxDEV","_jsxDEV","StaticArtistCards","_s","oliviaSongs","setOliviaSongs","taylorSongs","setTaylorSongs","gracieSongs","setGracieSongs","fetchSongs","oliviaResponse","fetch","taylorResponse","gracieResponse","ok","oliviaData","json","taylorData","gracieData","data","slice","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","sm","Img","variant","src","album","cover_medium","Body","Title","title","Text","artist","name","id","_c","$RefreshReg$"],"sources":["/Users/alessiaolosi/Desktop/progetti settimanali/progetto-settimanale-11/src/components/StaticCards.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport '../App.css'\n\nconst StaticArtistCards = () => {\n  const [oliviaSongs, setOliviaSongs] = useState([]);\n  const [taylorSongs, setTaylorSongs] = useState([]);\n  const [gracieSongs, setGracieSongs] = useState([]);\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const oliviaResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Olivia+Rodrigo\");\n        const taylorResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Taylor+Swift\");\n        const gracieResponse = await fetch(\"https://striveschool-api.herokuapp.com/api/deezer/search?q=Gracie+Abrams\");\n\n        if (oliviaResponse.ok && taylorResponse.ok && gracieResponse.ok) {\n          const oliviaData = await oliviaResponse.json();\n          const taylorData = await taylorResponse.json();\n          const gracieData = await gracieResponse.json();\n\n          setOliviaSongs(oliviaData.data.slice(0, 5));\n          setTaylorSongs(taylorData.data.slice(0, 5));\n          setGracieSongs(gracieData.data.slice(0, 5));\n        } else {\n          console.error(\"Errore nel recupero delle canzoni.\");\n        }\n      } catch (error) {\n        console.error(\"Errore nella fetch\", error);\n      }\n    };\n\n    fetchSongs();\n  }, []);\n\n  return (\n    <div className=\"static-artist-cards\">\n      <Row>\n        <Col>\n          <h2>Olivia Rodrigo</h2>\n          <Row>\n            {oliviaSongs.map(song => (\n              <Col key={song.id} sm={2} className='heightcards'>\n                <Card>\n                  <Card.Img variant=\"top\" src={song.album.cover_medium} />\n                  <Card.Body>\n                    <Card.Title>{song.title}</Card.Title>\n                    <Card.Text>{song.artist.name}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>Taylor Swift</h2>\n          <Row>\n            {taylorSongs.map(song => (\n              <Col key={song.id} sm={2} className='heightcards'>\n                <Card>\n                  <Card.Img variant=\"top\" src={song.album.cover_medium} />\n                  <Card.Body>\n                    <Card.Title>{song.title}</Card.Title>\n                    <Card.Text>{song.artist.name}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n      <Row>\n        <Col>\n          <h2>Gracie Abrams</h2>\n          <Row>\n            {gracieSongs.map(song => (\n              <Col key={song.id} sm={2} className='heightcards'>\n                <Card>\n                  <Card.Img variant=\"top\" src={song.album.cover_medium} />\n                  <Card.Body>\n                    <Card.Title>{song.title}</Card.Title>\n                    <Card.Text>{song.artist.name}</Card.Text>\n                  </Card.Body>\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default StaticArtistCards;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}